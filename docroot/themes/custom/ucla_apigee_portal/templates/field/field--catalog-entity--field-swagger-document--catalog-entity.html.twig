{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}

{#{% set classes = [#}
{#  'field',#}
{#  'field--name-' ~ field_name|clean_class,#}
{#  'field--type-' ~ field_type|clean_class,#}
{#  'field--label-' ~ label_display,#}
{#] %}#}

{#{% set attributes = attributes.addClass(classes) %}#}

{#{% include '@components/field/field.twig' with {#}
{#  'element': 'div',#}
{#  'label_display': label_display,#}
{#  'label_hidden': label_hidden,#}
{#  'label_element': 'h3',#}
{#  'label': label,#}
{#  'multiple': multiple,#}
{#  'items': items#}
{#} %}#}

{#{% set additional_attributes = {#}
{#  'class': ['field'],#}
{#} %}#}
{#{% set additional_title_attributes = {#}
{#  'class': [#}
{#    'field__label',#}
{#    label_display == 'inline' ? 'is-inline',#}
{#    label_display == 'visually_hidden' ? 'visually-hidden',#}
{#  ],#}
{#} %}#}
{#{% set additional_item_attributes = {#}
{#  'class': ['field__item'],#}
{#} %}#}

{#<{{ element ?: 'div' }} {{ add_attributes(additional_attributes) }}>#}
{#{% if not label_hidden %}#}
{#  <{{ label_element ?: 'h3' }} {{ add_attributes(additional_title_attributes,'title_attributes') }}>{{ label }}</{{ label_element ?: 'h3' }}>#}
{#{% endif %}#}
{#  {% if multiple %}#}
{#<div class="field__items">#}
{#  {% endif %}#}
{#  {% for item in items %}#}
{#    <div {{ add_attributes(additional_item_attributes) }}>{{ item.content }}</div>#}
{#  {% endfor %}#}
{#  {% if multiple %}#}
{#</div>#}
{#{% endif %}#}
{#</{{ element ?: 'div' }}>#}
<div class="documents-section">
  <ul class="nav nav-tabs">
    {% for item in items %}
      {% if item.content['#delta'] == 0 %}
        <li class="active">
      {% else %}
        <li class="">
      {% endif %}
      <a href="#{{ (item.content['#delta'])+1 }}" data-toggle="tab">Resource {{ (item.content['#delta'])+1 }}</a>
      </li>
    {% endfor %}
  </ul>
  <div class="tab-content clearfix">

    {% for item in items %}
    {% if item.content['#delta'] == 0 %}
    <div class="tab-pane fade active" id="{{ (item.content['#delta'])+1 }}">
      {% else %}
      <div class="tab-pane fade" id="{{ (item.content['#delta'])+1 }}">
        {% endif %}
        <div class="field__items">
          <div{{ item.attributes.addClass('field__item') }}>{{ item.content }}</div>
        </div>
      </div>
      {% endfor %}

    </div>
  </div>
</div>
